name: Build and publish Docker images

on: workflow_dispatch

env:
  BASE_IMAGE_NAME: "${{ vars.HUB_USERNAME }}/educontainer"

jobs:
  ubuntu-gcc:
    name: "Building and publishing image (Ubuntu: GCC ${{ matrix.version }})"

    strategy:
      fail-fast: true
      matrix:
        version:
          - 13
          - 12
          - 11
          - 10
          - 9

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'dev'
      - name: Build image
        env:
          IMAGE_NAME: "${{ env.BASE_IMAGE_NAME }}:dev-gcc${{ matrix.version }}"
        run: docker build --tag "${{ env.IMAGE_NAME }}" \
             --build-arg BUILD_TARGET_NAME=gcc \
             --build-arg BUILD_TARGET_NAMEXX=g++ \
             --build-arg BUILD_TARGET_VERSION=${{ matrix.version }} \
             -f ubuntu/Dockerfile .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}
      - name: Publish to Docker Hub
        env:
          IMAGE_NAME: "${{ env.BASE_IMAGE_NAME }}:dev-gcc${{ matrix.version }}"
        run: docker push "${{ env.IMAGE_NAME }}"

  ubuntu-clang:
    name: "Building and publishing image (Ubuntu: Clang ${{ matrix.version }})"

    strategy:
      fail-fast: true
      matrix:
        version:
          - 18
          - 17
          - 16
          - 15

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'dev'
      - name: Build image
        env:
          IMAGE_NAME: "${{ env.BASE_IMAGE_NAME }}:dev-clang${{ matrix.version }}"
        run: docker build --tag "${{ env.IMAGE_NAME }}" \
             --build-arg BUILD_TARGET_NAME=clang \
             --build-arg BUILD_TARGET_NAMEXX=clang++ \
             --build-arg BUILD_TARGET_VERSION=${{ matrix.version }} \
             -f ubuntu/Dockerfile .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}
      - name: Publish to Docker Hub
        env:
          IMAGE_NAME: "${{ env.BASE_IMAGE_NAME }}:dev-clang${{ matrix.version }}"
        run: docker push "${{ env.IMAGE_NAME }}"

  windows-msvc:
    name: "Building and publishing image (Windows: MSVC ${{ matrix.version }})"

    strategy:
      fail-fast: true
      matrix:
        version:
          - 17

    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'dev'
      - name: Build image
        env:
          IMAGE_NAME: "${{ env.BASE_IMAGE_NAME }}:dev-ltsc2019-msvc${{ matrix.version }}"
        run: docker build --tag "${{ env.IMAGE_NAME }}" --build-arg BUILD_TARGET_VERSION=${{ matrix.version }} -f windows/Dockerfile .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}
      - name: Publish to Docker Hub
        env:
          IMAGE_NAME: "${{ env.BASE_IMAGE_NAME }}:dev-ltsc2019-msvc${{ matrix.version }}"
        run: docker push "${{ env.IMAGE_NAME }}"
