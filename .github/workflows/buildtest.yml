name: Build and test Docker images

on: push

jobs:
  buildtest:
    name: "Building and testing image (${{matrix.compiler.name}})"

    strategy:
      fail-fast: true
      matrix:
        compiler:
          - {name: Clang 18, cc: clang, cxx: clang++, version: 18}
          - {name: Clang 17, cc: clang, cxx: clang++, version: 17}
          - {name: Clang 16, cc: clang, cxx: clang++, version: 16}
          - {name: Clang 15, cc: clang, cxx: clang++, version: 15}
          - {name: GCC 13, cc: gcc, cxx: g++, version: 13}
          - {name: GCC 12, cc: gcc, cxx: g++, version: 12}
          - {name: GCC 11, cc: gcc, cxx: g++, version: 11}
          - {name: GCC 10, cc: gcc, cxx: g++, version: 10}
          - {name: GCC 9, cc: gcc, cxx: g++, version: 9}
          - {name: GCC 8, cc: gcc, cxx: g++, version: 8}
          - {name: GCC 7, cc: gcc, cxx: g++, version: 7}
          - {name: GCC 6, cc: gcc, cxx: g++, version: 6}

    runs-on: ubuntu-latest

    env:
      IMAGE_BASENAME: educontainer

    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build --tag "${{vars.HUB_USERNAME}}/${{env.IMAGE_BASENAME}}:${{matrix.compiler.cc}}${{matrix.compiler.version}}" --build-arg COMPILER_NAME=${{matrix.compiler.cc}} --build-arg COMPILER_NAMEXX=${{matrix.compiler.cxx}} --build-arg COMPILER_VERSION=${{matrix.compiler.version}} .
      - name: Test Docker image
        run: docker run --volume "$GITHUB_WORKSPACE/testing:/testing" --workdir /testing "${{vars.HUB_USERNAME}}/${{env.IMAGE_BASENAME}}:${{matrix.compiler.cc}}${{matrix.compiler.version}}" bash test.sh
