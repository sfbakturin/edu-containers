name: Build and test Docker images

on: push

env:
  RUN_TESTS: true
  BASE_IMAGE_NAME: "${{ vars.HUB_USERNAME }}/educontainer"

jobs:
  ubuntu-gcc:
    name: "BuildTest (Ubuntu: ${{ matrix.cc }} ${{ matrix.version }})"

    strategy:
      fail-fast: true
      matrix:
        cc:
          - gcc
        cxx:
          - g++
        version:
          - 13
          - 12
          - 11
          - 10
          - 9

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: bash extra/build-image.sh "${{ matrix.cc }}" "${{ matrix.cxx }}" "${{ matrix.version }}"

  ubuntu-clang:
    name: "BuildTest (Ubuntu: ${{ matrix.cc }} ${{ matrix.version }})"

    strategy:
      fail-fast: true
      matrix:
        cc:
          - clang
        cxx:
          - clang++
        version:
          - 18
          - 17
          - 16
          - 15

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: bash extra/build-image.sh "${{ matrix.cc }}" "${{ matrix.cxx }}" "${{ matrix.version }}"

  windows:
    name: "Building and testing image (Windows: ${{ matrix.os.name }}, ${{ matrix.compiler.name }})"

    strategy:
      fail-fast: true
      matrix:
        compiler:
          - { name: MSVC, cc: cl }

        os:
          - { name: LTSC 2019, sys: ltsc, version: 2019 }

    runs-on: windows-2019

    env:
      BASE_IMAGE_TAG: "${{ matrix.os.sys }}${{ matrix.os.version }}-${{ matrix.compiler.cc }}"

    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build --tag "${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}" --build-arg RUN_TESTS=${{ env.RUN_TESTS }} -f windows/Dockerfile .
